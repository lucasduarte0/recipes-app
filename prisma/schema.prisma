generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearchPostgres", "postgresqlExtensions"]
}

datasource db {
  provider   = "postgresql"
  url        = env("DATABASE_URL")
  directUrl  = env("DIRECT_URL")
  extensions = [uuid_ossp(map: "uuid-ossp", schema: "extensions")]
}

model User {
  id          String       @id @default(uuid())
  firstName   String       @map("first_name")
  lastName    String       @map("last_name")
  email       String       @unique
  imageUrl    String       @map("image_url")
  username    String       @unique
  createdAt   DateTime     @default(now()) @map("created_at")
  updatedAt   DateTime     @updatedAt @map("updated_at")
  recipes     Recipe[]
  recipeLikes RecipeLike[]

  @@map("users")
}

model Recipe {
  id                 Int          @id @default(autoincrement())
  name               String
  ingredients        String[]     @default([])
  instructions       String[]     @default([])
  prepTimeMinutes    Int?         @map("prep_time_minutes")
  cookTimeMinutes    Int?         @map("cook_time_minutes")
  servings           Int?
  difficulty         String?
  cuisine            String
  caloriesPerServing Int?         @map("calories_per_serving")
  tags               String[]     @default([])
  image              String
  rating             Float?
  reviewCount        Int?         @map("review_count")
  mealType           String[]     @map("meal_type")
  userId             String       @map("user_id")
  createdAt          DateTime     @default(now()) @map("created_at")
  updatedAt          DateTime     @default(now()) @updatedAt @map("updated_at")
  cuisines           Cuisine      @relation(fields: [cuisine], references: [name], onDelete: NoAction, onUpdate: NoAction)
  user               User         @relation(fields: [userId], references: [id])
  categories         Category[]   @relation("CategoryToRecipe")
  recipeLikes        RecipeLike[]

  @@map("recipes")
}

model Cuisine {
  id          Int      @id @default(autoincrement())
  name        String   @unique
  description String?
  image       String?
  recipes     Recipe[]

  @@map("cuisines")
}

model RecipeLike {
  userId    String   @map("user_id")
  recipeId  Int      @map("recipe_id")
  createdAt DateTime @default(now()) @map("created_at")
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  recipe    Recipe   @relation(fields: [recipeId], references: [id], onDelete: Cascade)

  @@id([userId, recipeId])
  @@map("recipe_likes")
}

model Category {
  name        String   @id
  image       String
  description String
  count       Int      @default(0)
  recipes     Recipe[] @relation("CategoryToRecipe")

  @@map("categories")
}
