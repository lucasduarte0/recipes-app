// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id        String   @id @default(uuid())
  firstName String   @map("first_name")
  lastName  String   @map("last_name")
  email     String   @unique
  imageUrl  String   @map("image_url")
  username  String   @unique
  recipes   Recipe[]
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("users")
}

model Recipe {
  id                 Int        @id @default(autoincrement())
  name               String
  ingredients        String[]   @default([])
  instructions       String[]   @default([])
  prepTimeMinutes    Int?       @map("prep_time_minutes")
  cookTimeMinutes    Int?       @map("cook_time_minutes")
  servings           Int?
  difficulty         String?
  cuisine            String?
  caloriesPerServing Int?       @map("calories_per_serving")
  tags               String[]   @default([])
  image              String
  rating             Float?
  reviewCount        Int?       @map("review_count")
  mealType           String[]   @map("meal_type")
  categories         Category[]
  userId             String     @map("user_id")
  user               User       @relation(fields: [userId], references: [id])
  createdAt          DateTime   @default(now()) @map("created_at")
  updatedAt          DateTime   @updatedAt @map("updated_at")

  @@map("recipes")
}

model Category {
  name        String   @id
  image       String
  description String
  count       Int      @default(0)
  recipes     Recipe[]

  @@map("categories")
}
